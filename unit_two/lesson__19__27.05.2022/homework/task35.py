# todo: Реализовать классы DB и Profile
class DB:
    '''Данный класс содержит конструктор и метод get_connect. В конструкторе инициализируются переменные
     (атрибуты доступа к БД) . Метод возвращает соединение.'''
    def __init__(self, dbname, user, password):
    # В констукторе инициализируем атрибуты доступа к БД
        pass

    def get_connect(self):
        # Метод возвращает соединение к БД
        pass


class Auth:
    """Класс содержит методы регистрации, захода в систему и выхода из нее"""
    is_auth = False
    def registration(self):
        """Метод создания профиля пользователя в системе """
        pass

    def login(self):
        """Метод аутентификации пользователя в системе"""
        pass

    def logout(self):
        Auth.is_auth = False


class Profile:
    ''' Данный класс содержит конструктор и метод set_profile и get_profile для добавления и получения
     пользователя соответсвенно'''
    def __init__(self, login, password, name, surname, age, tel, email):
        """В констукторе инициализируем атрибуты сущности Profile"""
        pass

    def set_profile(self, conn):
        """в аргументе conn передается дискриптор подключения к БД"""
        # Добавляет профиль в БД
        pass

    def get_profile(self, conn):
        # Извлекает профиль из БД
        pass


class Test:
    """ В классе реализуем методы работы с БД """

    def get_list_tests(self):
        """В методе  получаем список тестов по темам """
        pass

    def get_questions(self, id_test):
        """В методе  получаем список вопросов-ответов по id теста """
        pass


class TestSystem:
    "Класс взаимодействует с моделью и представлением. Включает всю бизнес логику системы."
    def run(self):
        """Метод реализует запуск теста"""
        pass

    def show_list(self):
        """Метод реализует вывод списка тестов на экран"""
        pass

    def show_question(self, id_question):
        """Метод реализует вывод списка тестов на экран"""


class View:
    """ 'Абстрактный' класс для потомков """
    def render(self):
        pass


class TestView(View):
    """В классе перегружаем виртуальный метод  render от родителя"""

    def render(self, data):
        """Метод реализует отрисовку экранной формы выбора билета """


class QuestionView(View):
    """В классе перегружаем виртуальный метод  render от родителя"""

    def render(self, data):
        """Метод реализует отрисовку вопроса с вариантами ответа и строкой выбора варианта"""


class RegistrationView(View):
    """В классе перегружаем виртуальный метод  render от родителя"""

    def render(self, data):
        """Метод реализует отрисовку регистрации пользователя"""


class LoginView(View):
    """В классе перегружаем виртуальный метод  render от родителя"""

    def render(self, data):
        """Метод реализует отрисовку входа по логину и паролю для зарегистрированного пользователя"""
